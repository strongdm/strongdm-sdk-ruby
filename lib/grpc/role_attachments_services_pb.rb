# Copyright 2020 StrongDM Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: role_attachments.proto for package 'v1'

require "grpc"
require "role_attachments_pb"

module V1
  module RoleAttachments
    # RoleAttachments represent relationships between composite roles and the roles
    # that make up those composite roles. When a composite role is attached to another
    # role, the permissions granted to members of the composite role are augmented to
    # include the permissions granted to members of the attached role.
    class Service
      include GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = "v1.RoleAttachments"

      # Create registers a new RoleAttachment.
      rpc :Create, RoleAttachmentCreateRequest, RoleAttachmentCreateResponse
      # Get reads one RoleAttachment by ID.
      rpc :Get, RoleAttachmentGetRequest, RoleAttachmentGetResponse
      # Delete removes a RoleAttachment by ID.
      rpc :Delete, RoleAttachmentDeleteRequest, RoleAttachmentDeleteResponse
      # List gets a list of RoleAttachments matching a given set of criteria.
      rpc :List, RoleAttachmentListRequest, RoleAttachmentListResponse
    end

    Stub = Service.rpc_stub_class
  end
end
