# Copyright 2020 StrongDM Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: peering_group_peers.proto

require "google/protobuf"

require "options_pb"
require "spec_pb"

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("peering_group_peers.proto", :syntax => :proto3) do
    add_message "v1.PeeringGroupPeerCreateRequest" do
      optional :meta, :message, 1, "v1.CreateRequestMetadata"
      optional :peering_group_peer, :message, 2, "v1.PeeringGroupPeer"
    end
    add_message "v1.PeeringGroupPeerCreateResponse" do
      optional :meta, :message, 1, "v1.CreateResponseMetadata"
      optional :peering_group_peer, :message, 2, "v1.PeeringGroupPeer"
      optional :rate_limit, :message, 3, "v1.RateLimitMetadata"
    end
    add_message "v1.PeeringGroupPeerGetRequest" do
      optional :meta, :message, 1, "v1.GetRequestMetadata"
      optional :id, :string, 2
    end
    add_message "v1.PeeringGroupPeerGetResponse" do
      optional :meta, :message, 1, "v1.GetResponseMetadata"
      optional :peering_group_peer, :message, 2, "v1.PeeringGroupPeer"
      optional :rate_limit, :message, 3, "v1.RateLimitMetadata"
    end
    add_message "v1.PeeringGroupPeerDeleteRequest" do
      optional :meta, :message, 1, "v1.DeleteRequestMetadata"
      optional :id, :string, 2
    end
    add_message "v1.PeeringGroupPeerDeleteResponse" do
      optional :meta, :message, 1, "v1.DeleteResponseMetadata"
      optional :rate_limit, :message, 2, "v1.RateLimitMetadata"
    end
    add_message "v1.PeeringGroupPeerListRequest" do
      optional :meta, :message, 1, "v1.ListRequestMetadata"
      optional :filter, :string, 2
    end
    add_message "v1.PeeringGroupPeerListResponse" do
      optional :meta, :message, 1, "v1.ListResponseMetadata"
      repeated :peering_group_peers, :message, 2, "v1.PeeringGroupPeer"
      optional :rate_limit, :message, 3, "v1.RateLimitMetadata"
    end
    add_message "v1.PeeringGroupPeer" do
      optional :id, :string, 1
      optional :group_id, :string, 3
      optional :peers_with_group_id, :string, 4
    end
  end
end

module V1
  PeeringGroupPeerCreateRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.PeeringGroupPeerCreateRequest").msgclass
  PeeringGroupPeerCreateResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.PeeringGroupPeerCreateResponse").msgclass
  PeeringGroupPeerGetRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.PeeringGroupPeerGetRequest").msgclass
  PeeringGroupPeerGetResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.PeeringGroupPeerGetResponse").msgclass
  PeeringGroupPeerDeleteRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.PeeringGroupPeerDeleteRequest").msgclass
  PeeringGroupPeerDeleteResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.PeeringGroupPeerDeleteResponse").msgclass
  PeeringGroupPeerListRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.PeeringGroupPeerListRequest").msgclass
  PeeringGroupPeerListResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.PeeringGroupPeerListResponse").msgclass
  PeeringGroupPeer = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.PeeringGroupPeer").msgclass
end
