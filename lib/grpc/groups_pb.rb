# Copyright 2020 StrongDM Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: groups.proto

require "google/protobuf"

require "accounts_pb"
require "approval_workflows_pb"
require "options_pb"
require "roles_pb"
require "spec_pb"
require "tags_pb"

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("groups.proto", :syntax => :proto3) do
    add_message "v1.GroupCreateRequest" do
      optional :meta, :message, 1, "v1.CreateRequestMetadata"
      optional :group, :message, 2, "v1.Group"
    end
    add_message "v1.GroupCreateResponse" do
      optional :meta, :message, 1, "v1.CreateResponseMetadata"
      optional :group, :message, 2, "v1.Group"
      optional :rate_limit, :message, 3, "v1.RateLimitMetadata"
    end
    add_message "v1.GroupCreateFromRolesRequest" do
      optional :meta, :message, 1, "v1.CreateRequestMetadata"
      repeated :role_ids, :string, 2
      optional :commit, :bool, 3
    end
    add_message "v1.GroupCreateFromRolesResponse" do
      optional :meta, :message, 1, "v1.CreateResponseMetadata"
      optional :rate_limit, :message, 2, "v1.RateLimitMetadata"
      repeated :group_from_role, :message, 3, "v1.GroupFromRole"
    end
    add_message "v1.GroupFromRole" do
      optional :rate_limit, :message, 1, "v1.RateLimitMetadata"
      optional :role, :message, 2, "v1.Role"
      optional :group, :message, 3, "v1.Group"
      repeated :accounts, :message, 4, "v1.User"
      repeated :approval_flows, :message, 5, "v1.ApprovalWorkflow"
    end
    add_message "v1.GroupGetRequest" do
      optional :meta, :message, 1, "v1.GetRequestMetadata"
      optional :id, :string, 2
    end
    add_message "v1.GroupGetResponse" do
      optional :meta, :message, 1, "v1.GetResponseMetadata"
      optional :group, :message, 2, "v1.Group"
      optional :rate_limit, :message, 3, "v1.RateLimitMetadata"
    end
    add_message "v1.GroupUpdateRequest" do
      optional :meta, :message, 1, "v1.UpdateRequestMetadata"
      optional :id, :string, 2
      optional :group, :message, 3, "v1.Group"
    end
    add_message "v1.GroupUpdateResponse" do
      optional :meta, :message, 1, "v1.UpdateResponseMetadata"
      optional :group, :message, 2, "v1.Group"
      optional :rate_limit, :message, 3, "v1.RateLimitMetadata"
    end
    add_message "v1.GroupDeleteRequest" do
      optional :meta, :message, 1, "v1.DeleteRequestMetadata"
      optional :id, :string, 2
    end
    add_message "v1.GroupDeleteResponse" do
      optional :meta, :message, 1, "v1.DeleteResponseMetadata"
      optional :rate_limit, :message, 2, "v1.RateLimitMetadata"
    end
    add_message "v1.GroupListRequest" do
      optional :meta, :message, 1, "v1.ListRequestMetadata"
      optional :filter, :string, 2
    end
    add_message "v1.GroupListResponse" do
      optional :meta, :message, 1, "v1.ListResponseMetadata"
      repeated :groups, :message, 2, "v1.Group"
      optional :rate_limit, :message, 3, "v1.RateLimitMetadata"
    end
    add_message "v1.Group" do
      optional :id, :string, 1
      optional :name, :string, 2
      optional :description, :string, 3
      optional :source, :string, 4
      optional :tags, :message, 5, "v1.Tags"
    end
  end
end

module V1
  GroupCreateRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.GroupCreateRequest").msgclass
  GroupCreateResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.GroupCreateResponse").msgclass
  GroupCreateFromRolesRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.GroupCreateFromRolesRequest").msgclass
  GroupCreateFromRolesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.GroupCreateFromRolesResponse").msgclass
  GroupFromRole = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.GroupFromRole").msgclass
  GroupGetRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.GroupGetRequest").msgclass
  GroupGetResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.GroupGetResponse").msgclass
  GroupUpdateRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.GroupUpdateRequest").msgclass
  GroupUpdateResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.GroupUpdateResponse").msgclass
  GroupDeleteRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.GroupDeleteRequest").msgclass
  GroupDeleteResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.GroupDeleteResponse").msgclass
  GroupListRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.GroupListRequest").msgclass
  GroupListResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.GroupListResponse").msgclass
  Group = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.Group").msgclass
end
