# Copyright 2020 StrongDM Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: peering_groups.proto

require "google/protobuf"

require "options_pb"
require "spec_pb"

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("peering_groups.proto", :syntax => :proto3) do
    add_message "v1.PeeringGroupCreateRequest" do
      optional :meta, :message, 1, "v1.CreateRequestMetadata"
      optional :peering_group, :message, 2, "v1.PeeringGroup"
    end
    add_message "v1.PeeringGroupCreateResponse" do
      optional :meta, :message, 1, "v1.CreateResponseMetadata"
      optional :peering_group, :message, 2, "v1.PeeringGroup"
      optional :rate_limit, :message, 3, "v1.RateLimitMetadata"
    end
    add_message "v1.PeeringGroupGetRequest" do
      optional :meta, :message, 1, "v1.GetRequestMetadata"
      optional :id, :string, 2
    end
    add_message "v1.PeeringGroupGetResponse" do
      optional :meta, :message, 1, "v1.GetResponseMetadata"
      optional :peering_group, :message, 2, "v1.PeeringGroup"
      optional :rate_limit, :message, 3, "v1.RateLimitMetadata"
    end
    add_message "v1.PeeringGroupDeleteRequest" do
      optional :meta, :message, 1, "v1.DeleteRequestMetadata"
      optional :id, :string, 2
    end
    add_message "v1.PeeringGroupDeleteResponse" do
      optional :meta, :message, 1, "v1.DeleteResponseMetadata"
      optional :rate_limit, :message, 2, "v1.RateLimitMetadata"
    end
    add_message "v1.PeeringGroupListRequest" do
      optional :meta, :message, 1, "v1.ListRequestMetadata"
      optional :filter, :string, 2
    end
    add_message "v1.PeeringGroupListResponse" do
      optional :meta, :message, 1, "v1.ListResponseMetadata"
      repeated :peering_groups, :message, 2, "v1.PeeringGroup"
      optional :rate_limit, :message, 3, "v1.RateLimitMetadata"
    end
    add_message "v1.PeeringGroup" do
      optional :id, :string, 1
      optional :name, :string, 2
    end
  end
end

module V1
  PeeringGroupCreateRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.PeeringGroupCreateRequest").msgclass
  PeeringGroupCreateResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.PeeringGroupCreateResponse").msgclass
  PeeringGroupGetRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.PeeringGroupGetRequest").msgclass
  PeeringGroupGetResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.PeeringGroupGetResponse").msgclass
  PeeringGroupDeleteRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.PeeringGroupDeleteRequest").msgclass
  PeeringGroupDeleteResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.PeeringGroupDeleteResponse").msgclass
  PeeringGroupListRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.PeeringGroupListRequest").msgclass
  PeeringGroupListResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.PeeringGroupListResponse").msgclass
  PeeringGroup = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.PeeringGroup").msgclass
end
