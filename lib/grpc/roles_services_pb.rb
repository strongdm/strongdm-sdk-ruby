# Copyright 2020 StrongDM Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: roles.proto for package 'v1'

require "grpc"
require "roles_pb"

module V1
  module Roles
    # A Role has a list of access rules which determine which Resources the members
    # of the Role have access to. An Account can be a member of multiple Roles via
    # AccountAttachments.
    class Service
      include ::GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = "v1.Roles"

      # Create registers a new Role.
      rpc :Create, ::V1::RoleCreateRequest, ::V1::RoleCreateResponse
      # Get reads one Role by ID.
      rpc :Get, ::V1::RoleGetRequest, ::V1::RoleGetResponse
      # Update replaces all the fields of a Role by ID.
      rpc :Update, ::V1::RoleUpdateRequest, ::V1::RoleUpdateResponse
      # Delete removes a Role by ID.
      rpc :Delete, ::V1::RoleDeleteRequest, ::V1::RoleDeleteResponse
      # List gets a list of Roles matching a given set of criteria.
      rpc :List, ::V1::RoleListRequest, ::V1::RoleListResponse
    end

    Stub = Service.rpc_stub_class
  end
end
