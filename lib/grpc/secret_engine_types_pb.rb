# Copyright 2020 StrongDM Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: secret_engine_types.proto

require "google/protobuf"

require "options_pb"
require "tags_pb"
require "secret_engine_policy_pb"
require "google/protobuf/duration_pb"

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("secret_engine_types.proto", :syntax => :proto3) do
    add_message "v1.SecretEngine" do
      oneof :secret_engine do
        optional :active_directory, :message, 332, "v1.ActiveDirectoryEngine"
        optional :key_value, :message, 331, "v1.KeyValueEngine"
        optional :postgres, :message, 333, "v1.PostgresEngine"
      end
    end
    add_message "v1.ActiveDirectoryEngine" do
      optional :after_read_ttl, :message, 1012, "google.protobuf.Duration"
      optional :binddn, :string, 108
      optional :bindpass, :string, 109
      optional :certificate, :string, 107
      optional :connection_timeout, :uint32, 103
      optional :do_not_validate_timestamps, :bool, 1015
      optional :insecure_tls, :bool, 106
      optional :max_backoff_duration, :message, 1016, "google.protobuf.Duration"
      optional :policy, :message, 1014, "v1.SecretEnginePolicy"
      optional :request_timeout, :uint32, 104
      optional :start_tls, :bool, 105
      optional :ttl, :message, 1013, "google.protobuf.Duration"
      optional :upndomain, :string, 1011
      optional :url, :string, 102
      optional :userdn, :string, 1010
      optional :id, :string, 1
      optional :name, :string, 2
      optional :type, :string, 3
      optional :secret_store_id, :string, 5
      optional :secret_store_root_path, :string, 6
      optional :tags, :message, 7, "v1.Tags"
      optional :public_key, :bytes, 8
      optional :key_rotation_interval_days, :int32, 9
    end
    add_message "v1.KeyValueEngine" do
      optional :id, :string, 1
      optional :name, :string, 2
      optional :type, :string, 3
      optional :secret_store_id, :string, 5
      optional :secret_store_root_path, :string, 6
      optional :tags, :message, 7, "v1.Tags"
      optional :public_key, :bytes, 8
      optional :key_rotation_interval_days, :int32, 9
    end
    add_message "v1.PostgresEngine" do
      optional :hostname, :string, 101
      optional :password, :string, 103
      optional :port, :uint32, 104
      optional :username, :string, 102
      optional :id, :string, 1
      optional :name, :string, 2
      optional :type, :string, 3
      optional :secret_store_id, :string, 5
      optional :secret_store_root_path, :string, 6
      optional :tags, :message, 7, "v1.Tags"
      optional :public_key, :bytes, 8
      optional :key_rotation_interval_days, :int32, 9
    end
  end
end

module V1
  SecretEngine = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.SecretEngine").msgclass
  ActiveDirectoryEngine = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.ActiveDirectoryEngine").msgclass
  KeyValueEngine = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.KeyValueEngine").msgclass
  PostgresEngine = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("v1.PostgresEngine").msgclass
end
