# Copyright 2020 StrongDM Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: groups.proto for package 'v1'

require "grpc"
require "groups_pb"

module V1
  module Groups
    # A Group is a set of principals.
    class Service
      include ::GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = "v1.Groups"

      # Create registers a new Group.
      rpc :Create, ::V1::GroupCreateRequest, ::V1::GroupCreateResponse
      rpc :CreateFromRoles, ::V1::GroupCreateFromRolesRequest, ::V1::GroupCreateFromRolesResponse
      # Get reads one Group by ID.
      rpc :Get, ::V1::GroupGetRequest, ::V1::GroupGetResponse
      # Update replaces all the fields of a Group by ID.
      rpc :Update, ::V1::GroupUpdateRequest, ::V1::GroupUpdateResponse
      # Delete removes a Group by ID.
      rpc :Delete, ::V1::GroupDeleteRequest, ::V1::GroupDeleteResponse
      # List gets a list of Groups matching a given set of criteria.
      rpc :List, ::V1::GroupListRequest, ::V1::GroupListResponse
    end

    Stub = Service.rpc_stub_class
  end
end
