# Copyright 2020 StrongDM Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: secret_store_healths.proto for package 'v1'

require "grpc"
require "secret_store_healths_pb"

module V1
  module SecretStoreHealths
    # SecretStoreHealths exposes health states for secret stores.
    class Service
      include ::GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = "v1.SecretStoreHealths"

      # List reports the health status of node to secret store pairs.
      rpc :List, ::V1::SecretStoreHealthListRequest, ::V1::SecretStoreHealthListResponse
      # Check pushes a healthcheck request for a secret store
      # Deprecated: use Healthcheck instead
      rpc :Check, ::V1::SecretStoreHealthCheckRequest, ::V1::SecretStoreHealthCheckResponse
      # Healthcheck triggers a remote healthcheck request for a secret store. It may take minutes
      # to propagate across a large network of Nodes. The call will return immediately, and the
      # updated health of the Secret Store can be retrieved via List.
      rpc :Healthcheck, ::V1::SecretStoreHealthcheckRequest, ::V1::SecretStoreHealthcheckResponse
    end

    Stub = Service.rpc_stub_class
  end
end
